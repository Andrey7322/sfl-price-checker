import requests
import json
import time
from bs4 import BeautifulSoup

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
BOT_TOKEN = "7689422674:AAGU1101BBWCE5wpDQtatTLAWNBv7yOEsxY"
CHAT_ID = "653797157"
CHECK_INTERVAL = 7200  # 2 —á–∞—Å–∞
THRESHOLD = 0.10  # 10% –≤–≤–µ—Ä—Ö –∏–ª–∏ –≤–Ω–∏–∑

# === –í—Å–µ 48 —Ä–µ—Å—É—Ä—Å–æ–≤ ===
RESOURCES = [
    "Wood", "Stone", "Iron", "Gold", "Crimstone", "Obsidian", "Egg", "Honey", "Leather", "Wool", "Merino Wool",
    "Feather", "Milk", "Pumpkin", "Carrot", "Corn", "Beetroot", "Cauliflower", "Radish", "Parsnip",
    "Cabbage", "Potato", "Onion", "Garlic", "Chili", "Apple", "Orange", "Banana", "Blueberry", "Lemon",
    "Grape", "Tomato", "Sunflower", "Rice", "Celestine", "Lunara", "Duskberry", "Yam", "Kale", "Broccoli",
    "Strawberry", "Raspberry", "Peach", "Avocado", "Coconut", "Cocoa", "Tea Leaf", "Coffee Bean"
]

# === Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ===
def send_telegram_message(text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": text}
    try:
        response = requests.post(url, json=data)
        print("Telegram response:", response.text)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", e)

# === –ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É —Ä–µ—Å—É—Ä—Å–∞ —Å —Å–∞–π—Ç–∞ (–±–µ–∑ API) ===
def get_price(resource):
    try:
        url = f"https://sfl.world/trade/{resource.replace(' ', '%20')}"
        headers = {'User-Agent': 'Mozilla/5.0'}
        response = requests.get(url, headers=headers)
        soup = BeautifulSoup(response.text, "html.parser")
        price_elem = soup.select_one(".text-xxs.text-white.text-right")
        if not price_elem:
            return None
        return float(price_elem.text.strip().replace('$', ''))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã –¥–ª—è {resource}: {e}")
        return None

# === –†–∞–±–æ—Ç–∞ —Å price.json ===
def load_prices():
    try:
        with open("price.json", "r") as f:
            return json.load(f)
    except:
        return {}

def save_prices(prices):
    with open("price.json", "w") as f:
        json.dump(prices, f)

# === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ===
def check_prices():
    last_prices = load_prices()
    current_prices = {}

    for resource in RESOURCES:
        current_price = get_price(resource)
        if current_price is None:
            continue

        current_prices[resource] = current_price
        last_price = last_prices.get(resource)

        if last_price is not None:
            change = (current_price - last_price) / last_price
            if abs(change) >= THRESHOLD:
                direction = "üìà –≤—ã—Ä–æ—Å–ª–∞" if change > 0 else "üìâ —É–ø–∞–ª–∞"
                percent = abs(change) * 100
                msg = f"{direction} —Ü–µ–Ω–∞ –Ω–∞ {resource} –Ω–∞ {percent:.2f}%\n{last_price:.3f} ‚Üí {current_price:.3f}"
                send_telegram_message(msg)
        else:
            # –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
            send_telegram_message(f"üí∞ {resource}: {current_price:.3f}")

    save_prices(current_prices)

# === –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ===
send_telegram_message("üîÅ –ë–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç 48 —Ä–µ—Å—É—Ä—Å–æ–≤. –ò–∑–º–µ–Ω–µ–Ω–∏—è ¬±10% –±—É–¥—É—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞!")

# === –¶–∏–∫–ª ===
while True:
    check_prices()
    time.sleep(CHECK_INTERVAL)
